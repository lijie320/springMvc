<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	">
	<context:component-scan base-package="cn">
  </context:component-scan>
  <!-- 静态资源映射 -->
  <mvc:resources location="/WEB-INF/imgs/" mapping="/img/**"/>
  
  <!-- 视图解析 -->
  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/"></property>
    <property name="suffix" value=".jsp"></property>
  </bean>
  <!-- 验证国际化 -->
  <bean id="localValidatorFactoryBean" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <property name="validationMessageSource" ref="messageSource"></property>
   </bean>
  <mvc:annotation-driven validator="localValidatorFactoryBean"></mvc:annotation-driven>
  
  <!--设置图片大小 -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <property name="maxUploadSize" value="5242880"></property>
  </bean>
  
  	<!-- 除service层其它不拦截 -->
  <mvc:default-servlet-handler/>
  
  <!-- 该拦截器用于拦截url的参数  只是当jsp经过action之后 才会将当前国家的语言存储在session中 同时从session中获取-->
  <mvc:interceptors>
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
      <property name="paramName" value="a"></property>
    </bean>
    
    <mvc:interceptor>
    <!-- /**表示拦截所有 的action -->
      <mvc:mapping path="/inter"/>
      <bean id="myInteractor" class="cn.et.lesson05.MyInteractor">
      </bean>
    </mvc:interceptor>
    <!-- 重复提交的拦截器 -->
    <mvc:interceptor>
      <mvc:mapping path="/tm"/>
      <bean id="tokenInteractor" class="cn.et.lesson05.TokenInteractor">
      </bean>
    </mvc:interceptor>
    
  </mvc:interceptors>
  
  <!-- 参数需要被临时存储在某个地方，当用户再次访问使用之前设置的参数 -->
  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
  <!-- 扫描jdbc -->
  <context:property-placeholder location="classpath:/jdbc.properties"/>
  
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="url" value="${url}"></property>
	    <property name="username" value="${username1}"></property>
	    <property name="password" value="${password2}"></property>
	    <property name="driverClassName" value="${driverClass}"></property>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	    <property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 拦截 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 拦截的方法 -->
	<tx:advice id="myAdvise" transaction-manager="transactionManager">
		<tx:attributes>
			     <tx:method name="save*"/>
			     <tx:method name="delete*"/>
			     <tx:method name="update*"/>
			     <tx:method name="*" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	<!-- 定义切点 -->
	<aop:config>
		<aop:pointcut expression="execution(* cn.*..*.service.*.*(..))" id="myPonit"/>
		<aop:advisor advice-ref="myAdvise" pointcut-ref="myPonit"/>
	</aop:config>

</beans>